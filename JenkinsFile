pipeline {
    agent any

    environment {
        DB_HOST = credentials('db-host')        // Replace with your Jenkins secret ID for the DB host
        DB_DATABASE = credentials('db-name')    // Replace with your Jenkins secret ID for the DB name
        DB_USERNAME = credentials('db-user')    // Replace with your Jenkins secret ID for the DB user
        DB_PASSWORD = credentials('db-pass')    // Replace with your Jenkins secret ID for the DB password
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          userRemoteConfigs: [[url: 'https://github.com/winksen/Winksen-Portfolio-Backend.git']]
                ])
            }
        }

        stage('Install Dependencies') {
            steps {
                powershell 'composer install --no-interaction --prefer-dist'
            }
        }

        stage('Setup Environment') {
            steps {
                powershell '''
                Copy-Item .env.example .env -Force

                # Read and modify the .env file
                (Get-Content .env) | ForEach-Object {
                    $_ -replace '^DB_HOST=.*', "DB_HOST=${env:DB_HOST}" `
                       -replace '^DB_DATABASE=.*', "DB_DATABASE=${env:DB_DATABASE}" `
                       -replace '^DB_USERNAME=.*', "DB_USERNAME=${env:DB_USERNAME}" `
                       -replace '^DB_PASSWORD=.*', "DB_PASSWORD=${env:DB_PASSWORD}"
                } | Set-Content .env
                
                php artisan key:generate
                
                # Log the contents of the .env file for verification
                Write-Output "Generated .env file contents:"
                Get-Content .env
                '''
            }
        }

        stage('Run Tests') {
            steps {
                powershell 'php artisan test'
            }
        }

        stage('Deploy') {
            steps {
                // Replace with your Hostinger deployment commands
                powershell 'scp -r ./* user@your-hostinger-server:/path/to/deploy'
            }
        }
    }
}
